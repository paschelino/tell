group 'de.paschelino'
version '0.0.1-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.10'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.2"
    }
}


apply plugin: "kotlin"
apply plugin: "org.junit.platform.gradle.plugin"
apply plugin: "jacoco"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testCompile "org.junit.jupiter:junit-jupiter-api:5.0.2"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.0.2"
    testCompile "org.hamcrest:hamcrest-junit:2.0.0.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

junitPlatform {
    // logManager 'org.apache.logging.log4j.jul.LogManager'
    reportsDir file('build/test-results/junit-platform') // this is the default
    enableStandardTestTask true
    // selectors (optional)
    // filters (optional)
}

jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

project.afterEvaluate {
    def junitPlatformTestTask = project.tasks.getByName('junitPlatformTest')

    // configure jacoco to analyze the junitPlatformTest task
    jacoco {
        // this tool version is compatible with
        toolVersion = "0.7.6.201602180812"
        applyTo junitPlatformTestTask
    }

    // create junit platform jacoco task
    project.task(type: JacocoReport, "junitPlatformJacocoReport",
            {
                sourceDirectories = files("./src/main/kotlin")
                classDirectories = files("$buildDir/classes/kotlin/main")
                executionData junitPlatformTestTask
            })
}
